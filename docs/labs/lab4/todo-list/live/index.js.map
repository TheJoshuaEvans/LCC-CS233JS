{"version":3,"file":"index.js","mappings":"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","sources":["webpack://lcc-cs233js/./docs/labs/lab4/todo-list/src/classes/task-item.js","webpack://lcc-cs233js/./docs/labs/lab4/todo-list/src/classes/todo-list.js","webpack://lcc-cs233js/webpack/bootstrap","webpack://lcc-cs233js/webpack/runtime/define property getters","webpack://lcc-cs233js/webpack/runtime/hasOwnProperty shorthand","webpack://lcc-cs233js/webpack/runtime/make namespace object","webpack://lcc-cs233js/./docs/labs/lab4/todo-list/index.js"],"sourcesContent":["//? Joshua Evans - 2025-04-24\n/**\n * Class representing a single task item\n */\nclass TaskItem {\n  /**\n   * @param {TaskItem} props\n   */\n  constructor(props) {\n    /**\n     * The description of the task\n     * @type {string}\n     */\n    this.description = props.description;\n\n    /**\n     * If the task has been completed\n     * @type {boolean}\n     */\n    this.isComplete = props.isComplete;\n  }\n\n  /**\n   * Generate the HTML for the task item\n   *\n   * @returns {string} The HTML for the task item\n   */\n  generateTaskHtml = () => {\n    return /*html*/`\n      <li class=\"list-group-item checkbox\">\n        <div class=\"row\">\n          <div class=\"col-sm-1 pt-2 checkbox\">\n            <label><input name=\"toggleTaskStatus\" type=\"checkbox\" value=\"\"\n            class=\"\" ${(this.isComplete)?'checked':''}\n            /></label>\n          </div>\n          <div class=\"col-sm-10 task-text ${(this.isComplete)?'complete':''}\">\n            ${this.description}\n          </div>\n          <div class=\"col-sm-1 pt-2 delete-icon-area\">\n            <a name=\"deleteTask\"class=\"\" href=\"\">\n                <i class=\"bi-trash delete-icon\"></i>\n            </a>\n          </div>\n        </div>\n      </li>\n    `;\n  };\n};\n\nexport default TaskItem;\n","//? Joshua Evans - 2025-04-24\nimport TaskItem from './task-item.js';\n\nconst TASKS_KEY = 'tasks';\n\n/**\n * Class representing a to-do list, the core functionality of the to-do list app\n */\nclass ToDoList {\n  // ---- PROPERTIES ----\n  _tasksHtml = '';\n\n  /**\n   * @private\n   * The actual list of tasks\n   */\n  _tasks = [\n    new TaskItem({description: 'Go to Dentist', isComplete: false}),\n    new TaskItem({description: 'Do Gardening', isComplete: true}),\n    new TaskItem({description: 'Renew Library Account', isComplete: false}),\n  ];\n\n  // ---- METHODS ----\n  /**\n   * @private\n   * Internal helper method validates the index of a task in the task list\n   *\n   * @param {number} taskIndex The index of the task to validate\n   * @returns True if the index is valid, false otherwise\n   */\n  _validateIndex = (taskIndex) => {\n    if (taskIndex < 0 || taskIndex >= this._tasks.length) {\n      console.error('Invalid task index:', taskIndex);\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * Add a new task to the task list. All the task values are taken from the \"new task\"\n   * inputs\n   */\n  addTask = () => {\n    const taskTextInput = document.getElementById('addTask');\n    const taskText = taskTextInput?.value?.trim() ?? '';\n\n    if (!taskText) {\n      taskTextInput.classList.add('is-invalid');\n    } else {\n      taskTextInput.classList.remove('is-invalid');\n\n      // Create a new task item\n      const newTask = new TaskItem({description: taskText, isComplete: false});\n      this._tasks.push(newTask);\n\n      // Reload tasks and reset input field\n      this.loadTasks();\n      taskTextInput.value = '';\n    }\n  };\n\n  /**\n   * Apply event handlers to all the task list items. Should be called after tasks are\n   * loaded\n   */\n  addEventHandlers = () => {\n    const checkboxes = document.querySelectorAll('input[name=\"toggleTaskStatus\"]');\n    checkboxes.forEach((checkbox, index) => {\n      checkbox.addEventListener('change', () => {\n        this.toggleTaskStatus(index);\n      });\n    });\n\n    const deleteIcons = document.querySelectorAll('a[name=\"deleteTask\"]');\n    deleteIcons.forEach((deleteIcon, index) => {\n      deleteIcon.addEventListener('click', (event) => {\n        event.preventDefault(); // Prevent the default link behavior\n        this.deleteTask(index);\n      });\n    });\n  };\n\n  /**\n   * Load all the current tasks into the DOM within the task list. Will overwrite any\n   * existing content in the task list when called\n   */\n  loadTasks = () => {\n    this._tasksHtml = this._tasks.map(task => task.generateTaskHtml()).join('');\n\n    const taskListElement = document.getElementById('taskList');\n    taskListElement.innerHTML = this._tasksHtml;\n\n    this.addEventHandlers();\n\n    // Save the tasks to local storage\n    localStorage.setItem(TASKS_KEY, JSON.stringify(this._tasks));\n  };\n\n  /**\n   * Toggle the status of a task item between complete and incomplete\n   *\n   * @param  {number} taskIndex The index of the task to toggle the status of\n   */\n  toggleTaskStatus = (taskIndex) => {\n    if (!this._validateIndex(taskIndex)) return;\n\n    const task = this._tasks[taskIndex];\n    task.isComplete = !task.isComplete;\n\n    // Re-load tasks to reflect the updated status\n    this.loadTasks();\n  };\n\n  /**\n   *  Delete a task from the list\n   *\n   * @param  {number} taskIndex The index of the task to delete\n   */\n  deleteTask = (taskIndex) => {\n    if (!this._validateIndex(taskIndex)) return;\n\n    // Remove the task from the array\n    this._tasks.splice(taskIndex, 1);\n\n    // Re-load tasks to reflect the updated list\n    this.loadTasks();\n  };\n\n  // ---- BUILT-INS ----\n  constructor() {\n    // Load tasks from local storage\n    const existingTasks = localStorage.getItem(TASKS_KEY);\n    if (existingTasks) {\n      this._tasks = JSON.parse(existingTasks).map(taskData => new TaskItem(taskData));\n    }\n\n    this.loadTasks();\n\n    // Add event listener for the \"Add Task\" button\n    const addTaskButton = document.getElementById('addButton');\n    addTaskButton.addEventListener('click', (event) => {\n      event.preventDefault(); // Prevent the default form submission behavior\n      this.addTask();\n    });\n  }\n}\n\nexport default ToDoList;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//? Joshua Evans - 2025-04-24\nimport ToDoList from './src/classes/todo-list.js';\n\nwindow.onload = () => {\n  const toDo = new ToDoList();\n  window.toDo = toDo;\n};\n"],"names":["TaskItem","_createClass","props","_this","_classCallCheck","_defineProperty","concat","isComplete","description","TASKS_KEY","ToDoList","taskIndex","_tasks","length","console","error","_taskTextInput$value$","_taskTextInput$value","taskTextInput","document","getElementById","taskText","value","trim","classList","add","remove","newTask","push","loadTasks","checkboxes","querySelectorAll","forEach","checkbox","index","addEventListener","toggleTaskStatus","deleteIcons","deleteIcon","event","preventDefault","deleteTask","_tasksHtml","map","task","generateTaskHtml","join","taskListElement","innerHTML","addEventHandlers","localStorage","setItem","JSON","stringify","_validateIndex","splice","existingTasks","getItem","parse","taskData","addTaskButton","addTask","window","onload","toDo"],"sourceRoot":""}